//Source code generated by AppGPT (www.appgpt.tech)
import { mergeTranslations } from 'ra-core';
import polyglotI18nProvider from 'ra-i18n-polyglot';
import enOriginal from 'ra-language-english';
import frOriginal from 'ra-language-french';

const enResources = {
  resources: {
    Tips: {
      name: 'Tips',
      fields: {
        title: 'Title',
        description: 'Description',
        category: 'Category',
        datePosted: 'Date Posted',
        id: 'id',
      },
    },
    Users: {
      name: 'Users',
      fields: {
        username: 'Username',
        email: 'Email',
        password: 'Password',
        subscriptionStatus: 'Subscription Status',
        id: 'id',
      },
    },
    Subscriptions: {
      name: 'Subscriptions',
      fields: {
        userId: 'User Id',
        subscriptionType: 'Subscription Type',
        startDate: 'Start Date',
        endDate: 'End Date',
        id: 'id',
      },
    },
    Payment: {
      name: 'Payment',
      fields: {
        userId: 'User Id',
        amount: 'Amount',
        paymentMethod: 'Payment Method',
        transactionId: 'Transaction Id',
        paymentDate: 'Payment Date',
        id: 'id',
      },
    },
  },
};
const frResources = {
  resources: {
    Tips: {
      name: 'Tips (fr)',
      fields: {
        title: 'Title (fr)',
        description: 'Description (fr)',
        category: 'Category (fr)',
        datePosted: 'Date Posted (fr)',
        id: 'id',
      },
    },
    Users: {
      name: 'Users (fr)',
      fields: {
        username: 'Username (fr)',
        email: 'Email (fr)',
        password: 'Password (fr)',
        subscriptionStatus: 'Subscription Status (fr)',
        id: 'id',
      },
    },
    Subscriptions: {
      name: 'Subscriptions (fr)',
      fields: {
        userId: 'User Id (fr)',
        subscriptionType: 'Subscription Type (fr)',
        startDate: 'Start Date (fr)',
        endDate: 'End Date (fr)',
        id: 'id',
      },
    },
    Payment: {
      name: 'Payment (fr)',
      fields: {
        userId: 'User Id (fr)',
        amount: 'Amount (fr)',
        paymentMethod: 'Payment Method (fr)',
        transactionId: 'Transaction Id (fr)',
        paymentDate: 'Payment Date (fr)',
        id: 'id',
      },
    },
  },
};

const en = mergeTranslations(enOriginal, enResources);
const fr = mergeTranslations(frOriginal, frResources);

const translations = { en, fr };
export const i18nProvider = polyglotI18nProvider(
  (locale) => translations[locale],
  'en', //default locale
  [
    { locale: 'en', name: 'English' },
    { locale: 'fr', name: 'Fran√ßais' },
  ],
);
